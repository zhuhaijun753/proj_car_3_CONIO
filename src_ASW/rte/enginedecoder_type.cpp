/*
 * ENGINEDECODER_type.cpp
 *
 *  Created on: 01.05.2016
 *      Author: Autogenerated
 */



#include "ENGINEDECODER_type.h"
#include "math.h"
#include "det.h"


#define ENGINEDECODER_COUNTSPERREVOLUTION 	48							//factor to convert position actual value into wheel revolutions
#define ENGINEDECODER_WHEELDIAMETER 		10							//wheel diameter in centimeter

extern "C"
{

//extern CODD_ENGINEDECODER_t CODD_ENGINEDECODER_previousPosition_data;

/*
#pragma section ".data.deadrek"
static ENGINEDECODER_data_t temObs;
#pragma section
*/

RC_t ENGINEDECODER_scaleR2D( const ENGINEDECODER_raw_t * const praw, ENGINEDECODER_data_t * const pvalue)
{


	if (praw == 0 )
	{
		DET_stop(AUTOCORE, POINTER_ERROR, 0);
	}

	//Calculate the application data as delta displacement as compared to the last position
	pvalue->delta_displacementFL = (praw->engineFL_Pos - praw->engineFL_Pos_prev) * ENGINEDECODER_WHEELDIAMETER * M_PI / ENGINEDECODER_COUNTSPERREVOLUTION;
	pvalue->delta_displacementFR = (praw->engineFR_Pos - praw->engineFR_Pos_prev) * ENGINEDECODER_WHEELDIAMETER * M_PI / ENGINEDECODER_COUNTSPERREVOLUTION;
	pvalue->delta_displacementRL = (praw->engineRL_Pos - praw->engineRL_Pos_prev) * ENGINEDECODER_WHEELDIAMETER * M_PI / ENGINEDECODER_COUNTSPERREVOLUTION;
	pvalue->delta_displacementRR = (praw->engineRR_Pos - praw->engineRR_Pos_prev) * ENGINEDECODER_WHEELDIAMETER * M_PI / ENGINEDECODER_COUNTSPERREVOLUTION;

	//updating previous position of FL with current position
	//Nasty hack to allow write access to raw data
	ENGINEDECODER_raw_t * const prawWrite = (ENGINEDECODER_raw_t *)praw;
	prawWrite->engineFL_Pos_prev = praw->engineFL_Pos;
	prawWrite->engineFR_Pos_prev = praw->engineFR_Pos;
	prawWrite->engineRL_Pos_prev = praw->engineRL_Pos;
	prawWrite->engineRR_Pos_prev = praw->engineRR_Pos;


	return RC_SUCCESS;
}

RC_t ENGINEDECODER_scaleD2R( const ENGINEDECODER_data_t * const pvalue, ENGINEDECODER_raw_t * const praw)
{

	return RC_ERROR;
}

} //extern  "C"
