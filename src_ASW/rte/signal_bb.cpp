/**************************************************
 ** The signal blackboard (autogenerated)
 **************************************************/

#include "mcal.h" 
#include "com.h" 

/* Generated signal classes */
#include "cardataprotocol_signal.h"
#include "remotemsg_signal.h"
#include "joystick_signal.h"
#include "carstate_signal.h"
#include "targetspeed_signal.h"
#include "nmt_signal.h"
#include "engine_signal.h"
#include "enginestate_signal.h"
#include "lidarscan_signal.h"
#include "lidarconfig_signal.h"
#include "lidarfeature_signal.h"
#include "enginedecoder_signal.h"
#include "enginedecoder_asyncbuffer_signal.h"
#include "carposition_signal.h"
#include "sint32_ir_signal.h"
#include "uint8_signal.h"
#include "event_signal.h"
#include "touch_signal.h"




/*******************************************************************************
 ** Signallayer sl_safety: Contains all safety critical signals. Runs on core 0 
 ******************************************************************************/ 



/*****************************************************
 ** RTE Object so_in_remote
 *****************************************************/

CARDATAPROTOCOL_CREATE_SIGNAL( 
   /* signal object name */ so_in_remote,
   /* init value */         REMOTE_INIT_DATA,
   /* init raw value */     REMOTE_RX_INIT_RAW,
   /* scaler raw_to_appl */ CARDATAPROTOCOL_scaleR2D,
   /* scaler appl_to_raw */ CARDATAPROTOCOL_scaleD2R,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         0,
   /* section RAM memory */ .sl_safety,
   /* section ROM memory */ .rodata
); /* signal object so_in_remote */


/*****************************************************
 ** RTE Object so_out_remote
 *****************************************************/


/* outportlist opl_remote */

#pragma section ".rodata"
CARDATAPROTOCOL_flush_channel_t opl_remote[] = 
{
    /* remote GUI protocol            */		{ 0, UARTPROT_remote_transmit },
    /* end of list                    */		{ 0, 0 } 
};   /* Outportlist opl_remote */
#pragma section 

CARDATAPROTOCOL_CREATE_SIGNAL( 
   /* signal object name */ so_out_remote,
   /* init value */         REMOTE_INIT_DATA,
   /* init raw value */     REMOTE_TX_INIT_RAW,
   /* scaler raw_to_appl */ CARDATAPROTOCOL_scaleR2D,
   /* scaler appl_to_raw */ CARDATAPROTOCOL_scaleD2R,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         opl_remote,
   /* section RAM memory */ .sl_safety,
   /* section ROM memory */ .rodata
); /* signal object so_out_remote */


/*****************************************************
 ** RTE Object so_out_remoteEvent
 *****************************************************/


/* outportlist opl_remoteEvent */

#pragma section ".rodata"
EVENT_flush_channel_t opl_remoteEvent[] = 
{
    /* remote events to state task    */		{ 0, EVENT_transmit },
    /* end of list                    */		{ 0, 0 } 
};   /* Outportlist opl_remoteEvent */
#pragma section 

EVENT_CREATE_SIGNAL( 
   /* signal object name */ so_out_remoteEvent,
   /* init value */         EVENT_INIT_DATA,
   /* init raw value */     0,
   /* scaler raw_to_appl */ 0,
   /* scaler appl_to_raw */ 0,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         opl_remoteEvent,
   /* section RAM memory */ .sl_safety,
   /* section ROM memory */ .rodata
); /* signal object so_out_remoteEvent */


/*****************************************************
 ** RTE Object so_remoteId
 *****************************************************/

SINT32_IR_CREATE_SIGNAL( 
   /* signal object name */ so_remoteId,
   /* init value */         -1,
   /* init raw value */     0,
   /* scaler raw_to_appl */ 0,
   /* scaler appl_to_raw */ 0,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         0,
   /* section RAM memory */ .sl_safety,
   /* section ROM memory */ .rodata
); /* signal object so_remoteId */


/*****************************************************
 ** RTE Object so_out_engine
 *****************************************************/


/* outportlist opl_engine */

#pragma section ".rodata"
ENGINE_flush_channel_t opl_engine[] = 
{
    /* engine target speed            */		{ 0, CANOPEN_write_engineSpeedToFaulhaber },
    /* end of list                    */		{ 0, 0 } 
};   /* Outportlist opl_engine */
#pragma section 

ENGINE_CREATE_SIGNAL( 
   /* signal object name */ so_out_engine,
   /* init value */         ENGINE_INIT_DATA,
   /* init raw value */     ENGINE_INIT_RAW,
   /* scaler raw_to_appl */ ENGINE_scaleR2D,
   /* scaler appl_to_raw */ ENGINE_scaleD2R,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         opl_engine,
   /* section RAM memory */ .sl_safety,
   /* section ROM memory */ .rodata
); /* signal object so_out_engine */


/*****************************************************
 ** RTE Object so_in_engineState
 *****************************************************/

ENGINESTATE_CREATE_SIGNAL( 
   /* signal object name */ so_in_engineState,
   /* init value */         ENGINESTATE_INIT_DATA,
   /* init raw value */     ENGINESTATE_INIT_RAW,
   /* scaler raw_to_appl */ ENGINESTATE_scaleR2D,
   /* scaler appl_to_raw */ ENGINESTATE_scaleD2R,
   /* refresh Index */      0,
   /* refresh function */   CANOPEN_read_engineStateFromFaulhaber,
   /* flush list */         0,
   /* section RAM memory */ .sl_safety,
   /* section ROM memory */ .rodata
); /* signal object so_in_engineState */


/*****************************************************
 ** RTE Object so_out_engineState
 *****************************************************/


/* outportlist opl_engineState */

#pragma section ".rodata"
ENGINESTATE_flush_channel_t opl_engineState[] = 
{
    /* engine target state            */		{ 0, CANOPEN_write_engineStateToFaulhaber },
    /* end of list                    */		{ 0, 0 } 
};   /* Outportlist opl_engineState */
#pragma section 

ENGINESTATE_CREATE_SIGNAL( 
   /* signal object name */ so_out_engineState,
   /* init value */         ENGINESTATE_INIT_DATA,
   /* init raw value */     ENGINESTATE_INIT_RAW,
   /* scaler raw_to_appl */ ENGINESTATE_scaleR2D,
   /* scaler appl_to_raw */ ENGINESTATE_scaleD2R,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         opl_engineState,
   /* section RAM memory */ .sl_safety,
   /* section ROM memory */ .rodata
); /* signal object so_out_engineState */


/*****************************************************
 ** RTE Object so_driveMode
 *****************************************************/

SINT32_IR_CREATE_SIGNAL( 
   /* signal object name */ so_driveMode,
   /* init value */         -1,
   /* init raw value */     0,
   /* scaler raw_to_appl */ 0,
   /* scaler appl_to_raw */ 0,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         0,
   /* section RAM memory */ .sl_safety,
   /* section ROM memory */ .rodata
); /* signal object so_driveMode */


/*****************************************************
 ** RTE Object so_in_lidarCollision
 *****************************************************/

UINT8_CREATE_SIGNAL( 
   /* signal object name */ so_in_lidarCollision,
   /* init value */         2,
   /* init raw value */     2,
   /* scaler raw_to_appl */ 0,
   /* scaler appl_to_raw */ 0,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         0,
   /* section RAM memory */ .sl_safety,
   /* section ROM memory */ .rodata
); /* signal object so_in_lidarCollision */


/*****************************************************
 ** RTE Object so_inout_lidarConfig
 *****************************************************/


/* outportlist opl_lidarConfig */

#pragma section ".rodata"
LIDARCONFIG_flush_channel_t opl_lidarConfig[] = 
{
    /* LIDAR configuration            */		{ 0, CANOPEN_write_ConfigToLidar },
    /* end of list                    */		{ 0, 0 } 
};   /* Outportlist opl_lidarConfig */
#pragma section 

LIDARCONFIG_CREATE_SIGNAL( 
   /* signal object name */ so_inout_lidarConfig,
   /* init value */         LIDARCONFIG_INIT_DATA,
   /* init raw value */     LIDARCONFIG_INIT_RAW,
   /* scaler raw_to_appl */ LIDARCONFIG_scaleR2D,
   /* scaler appl_to_raw */ LIDARCONFIG_scaleD2R,
   /* refresh Index */      0,
   /* refresh function */   CANOPEN_read_ConfigFromLidar,
   /* flush list */         opl_lidarConfig,
   /* section RAM memory */ .sl_safety,
   /* section ROM memory */ .rodata
); /* signal object so_inout_lidarConfig */


/*****************************************************
 ** RTE Object so_joystick
 *****************************************************/

JOYSTICK_CREATE_SIGNAL( 
   /* signal object name */ so_joystick,
   /* init value */         JOYSTICK_INIT_DATA,
   /* init raw value */     0,
   /* scaler raw_to_appl */ 0,
   /* scaler appl_to_raw */ 0,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         0,
   /* section RAM memory */ .sl_safety,
   /* section ROM memory */ .rodata
); /* signal object so_joystick */


/*****************************************************
 ** RTE Object so_in_enginedecoder
 *****************************************************/

ENGINEDECODER_CREATE_SIGNAL( 
   /* signal object name */ so_in_enginedecoder,
   /* init value */         ENGINEDECODER_INIT_DATA,
   /* init raw value */     ENGINEDECODER_INIT_RAW,
   /* scaler raw_to_appl */ ENGINEDECODER_scaleR2D,
   /* scaler appl_to_raw */ ENGINEDECODER_scaleD2R,
   /* refresh Index */      0,
   /* refresh function */   MSG_tx_decoderToCanopen,
   /* flush list */         0,
   /* section RAM memory */ .sl_safety,
   /* section ROM memory */ .rodata
); /* signal object so_in_enginedecoder */


/*****************************************************
 ** RTE Object so_in_enginedecoderBuffer
 *****************************************************/

ENGINEDECODER_ASYNCBUFFER_CREATE_SIGNAL( 
   /* signal object name */ so_in_enginedecoderBuffer,
   /* init value */         ENGINEDECODER_ASYNCBUFFER_INIT_DATA,
   /* init raw value */     0,
   /* scaler raw_to_appl */ 0,
   /* scaler appl_to_raw */ 0,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         0,
   /* section RAM memory */ .sl_safety,
   /* section ROM memory */ .rodata
); /* signal object so_in_enginedecoderBuffer */


/*****************************************************
 ** RTE Object so_targetspeedToLidar
 *****************************************************/


/* outportlist opl_targetspeedLidar */

#pragma section ".rodata"
TARGETSPEED_flush_channel_t opl_targetspeedLidar[] = 
{
    /* engine target speed            */		{ 0, CANOPEN_write_targetSpeedToLidar },
    /* end of list                    */		{ 0, 0 } 
};   /* Outportlist opl_targetspeedLidar */
#pragma section 

TARGETSPEED_CREATE_SIGNAL( 
   /* signal object name */ so_targetspeedToLidar,
   /* init value */         TARGETSPEED_INIT_DATA,
   /* init raw value */     TARGETSPEED_INIT_RAW,
   /* scaler raw_to_appl */ TARGETSPEED_scaleR2D,
   /* scaler appl_to_raw */ TARGETSPEED_scaleD2R_Lidar,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         opl_targetspeedLidar,
   /* section RAM memory */ .sl_safety,
   /* section ROM memory */ .rodata
); /* signal object so_targetspeedToLidar */


/*****************************************************
 ** RTE Object so_in_NMT
 *****************************************************/

NMT_CREATE_SIGNAL( 
   /* signal object name */ so_in_NMT,
   /* init value */         NMT_INIT_DATA,
   /* init raw value */     NMT_INIT_RAW,
   /* scaler raw_to_appl */ NMT_scaleR2D,
   /* scaler appl_to_raw */ 0,
   /* refresh Index */      0,
   /* refresh function */   CANOPEN_read_NMTfromSmartpower,
   /* flush list */         0,
   /* section RAM memory */ .sl_safety,
   /* section ROM memory */ .rodata
); /* signal object so_in_NMT */


/*******************************************************************************
 ** Signallayer sl_safety_state: Contains all signals which are modified by the central state handler 
 ******************************************************************************/ 



/*****************************************************
 ** RTE Object so_carstate
 *****************************************************/

CARSTATE_CREATE_SIGNAL( 
   /* signal object name */ so_carstate,
   /* init value */         CARSTATE_INIT_DATA,
   /* init raw value */     0,
   /* scaler raw_to_appl */ 0,
   /* scaler appl_to_raw */ 0,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         0,
   /* section RAM memory */ .sl_safety_state,
   /* section ROM memory */ .rodata
); /* signal object so_carstate */


/*****************************************************
 ** RTE Object so_out_remoteMsgFromState
 *****************************************************/


/* outportlist opl_remoteMsgFromState */

#pragma section ".rodata"
REMOTEMSG_flush_channel_t opl_remoteMsgFromState[] = 
{
    /* remote protocol via message handler */		{ 1, MSG_tx_remoteToXbee },
    /* end of list                    */		{ 0, 0 } 
};   /* Outportlist opl_remoteMsgFromState */
#pragma section 

REMOTEMSG_CREATE_SIGNAL( 
   /* signal object name */ so_out_remoteMsgFromState,
   /* init value */         REMOTEMSG_INIT_DATA,
   /* init raw value */     REMOTEMSG_INIT_RAW,
   /* scaler raw_to_appl */ REMOTEMSG_scaleR2D,
   /* scaler appl_to_raw */ REMOTEMSG_scaleD2R,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         opl_remoteMsgFromState,
   /* section RAM memory */ .sl_safety_state,
   /* section ROM memory */ .rodata
); /* signal object so_out_remoteMsgFromState */


/*******************************************************************************
 ** Signallayer sl_control: Contains all signals required for controlling the car 
 ******************************************************************************/ 



/*****************************************************
 ** RTE Object so_in_lidarscan
 *****************************************************/

LIDARSCAN_CREATE_SIGNAL( 
   /* signal object name */ so_in_lidarscan,
   /* init value */         LIDARSCAN_INIT_DATA,
   /* init raw value */     LIDARSCAN_INIT_RAW,
   /* scaler raw_to_appl */ LIDARSCAN_scaleR2D,
   /* scaler appl_to_raw */ LIDARSCAN_scaleD2R,
   /* refresh Index */      0,
   /* refresh function */   CANOPEN_read_ScanFromLidar,
   /* flush list */         0,
   /* section RAM memory */ .sl_safety,
   /* section ROM memory */ .rodata
); /* signal object so_in_lidarscan */


/*****************************************************
 ** RTE Object so_lidarfeature
 *****************************************************/

LIDARFEATURE_CREATE_SIGNAL( 
   /* signal object name */ so_lidarfeature,
   /* init value */         LIDARFEATURE_INIT_DATA,
   /* init raw value */     0,
   /* scaler raw_to_appl */ 0,
   /* scaler appl_to_raw */ 0,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         0,
   /* section RAM memory */ .sl_control,
   /* section ROM memory */ .rodata
); /* signal object so_lidarfeature */


/*****************************************************
 ** RTE Object so_targetspeed
 *****************************************************/


/* outportlist opl_targetspeed */

#pragma section ".rodata"
TARGETSPEED_flush_channel_t opl_targetspeed[] = 
{
    /* end of list                    */		{ 0, 0 } 
};   /* Outportlist opl_targetspeed */
#pragma section 

TARGETSPEED_CREATE_SIGNAL( 
   /* signal object name */ so_targetspeed,
   /* init value */         TARGETSPEED_INIT_DATA,
   /* init raw value */     0,
   /* scaler raw_to_appl */ TARGETSPEED_scaleR2D,
   /* scaler appl_to_raw */ TARGETSPEED_scaleD2R,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         opl_targetspeed,
   /* section RAM memory */ .sl_control,
   /* section ROM memory */ .rodata
); /* signal object so_targetspeed */


/*****************************************************
 ** RTE Object so_carposition
 *****************************************************/

CARPOSITION_CREATE_SIGNAL( 
   /* signal object name */ so_carposition,
   /* init value */         CARPOSITION_INIT_DATA,
   /* init raw value */     0,
   /* scaler raw_to_appl */ 0,
   /* scaler appl_to_raw */ 0,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         0,
   /* section RAM memory */ .sl_control,
   /* section ROM memory */ .rodata
); /* signal object so_carposition */


/*****************************************************
 ** RTE Object so_out_remoteMsgFromControl
 *****************************************************/


/* outportlist opl_remoteMsgFromControl */

#pragma section ".rodata"
REMOTEMSG_flush_channel_t opl_remoteMsgFromControl[] = 
{
    /* remote protocol via message handler */		{ 2, MSG_tx_remoteToXbee },
    /* end of list                    */		{ 0, 0 } 
};   /* Outportlist opl_remoteMsgFromControl */
#pragma section 

REMOTEMSG_CREATE_SIGNAL( 
   /* signal object name */ so_out_remoteMsgFromControl,
   /* init value */         REMOTEMSG_INIT_DATA,
   /* init raw value */     REMOTEMSG_INIT_RAW,
   /* scaler raw_to_appl */ REMOTEMSG_scaleR2D,
   /* scaler appl_to_raw */ REMOTEMSG_scaleD2R,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         opl_remoteMsgFromControl,
   /* section RAM memory */ .sl_control,
   /* section ROM memory */ .rodata
); /* signal object so_out_remoteMsgFromControl */


/*******************************************************************************
 ** Signallayer sl_misc: Contains all miscellaneous signals 
 ******************************************************************************/ 



/*****************************************************
 ** RTE Object so_in_touch
 *****************************************************/

TOUCH_CREATE_SIGNAL( 
   /* signal object name */ so_in_touch,
   /* init value */         TOUCH_INIT_DATA,
   /* init raw value */     0,
   /* scaler raw_to_appl */ 0,
   /* scaler appl_to_raw */ 0,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         0,
   /* section RAM memory */ .sl_misc,
   /* section ROM memory */ .rodata
); /* signal object so_in_touch */


/*****************************************************
 ** RTE Object so_touchEvent
 *****************************************************/


/* outportlist opl_touchEvent */

#pragma section ".rodata"
EVENT_flush_channel_t opl_touchEvent[] = 
{
    /* touch events to tft task       */		{ 0, EVENT_transmit },
    /* end of list                    */		{ 0, 0 } 
};   /* Outportlist opl_touchEvent */
#pragma section 

EVENT_CREATE_SIGNAL( 
   /* signal object name */ so_touchEvent,
   /* init value */         EVENT_INIT_DATA,
   /* init raw value */     0,
   /* scaler raw_to_appl */ 0,
   /* scaler appl_to_raw */ 0,
   /* refresh Index */      0,
   /* refresh function */   0,
   /* flush list */         opl_touchEvent,
   /* section RAM memory */ .sl_misc,
   /* section ROM memory */ .rodata
); /* signal object so_touchEvent */


/*******************************************************************************
 ** Init functions for the signallayers
 *******************************************************************************/ 

void SL_SAFETY_init()
{
    CARDATAPROTOCOL_init( &so_in_remote, REMOTE_INIT_DATA);
    CARDATAPROTOCOL_init( &so_out_remote, REMOTE_INIT_DATA);
    EVENT_init( &so_out_remoteEvent, EVENT_INIT_DATA);
    SINT32_IR_init( &so_remoteId, -1);
    ENGINE_init( &so_out_engine, ENGINE_INIT_DATA);
    ENGINESTATE_init( &so_in_engineState, ENGINESTATE_INIT_DATA);
    ENGINESTATE_init( &so_out_engineState, ENGINESTATE_INIT_DATA);
    SINT32_IR_init( &so_driveMode, -1);
    UINT8_init( &so_in_lidarCollision, 2);
    LIDARCONFIG_init( &so_inout_lidarConfig, LIDARCONFIG_INIT_DATA);
    JOYSTICK_init( &so_joystick, JOYSTICK_INIT_DATA);
    ENGINEDECODER_init( &so_in_enginedecoder, ENGINEDECODER_INIT_DATA);
    ENGINEDECODER_ASYNCBUFFER_init( &so_in_enginedecoderBuffer, ENGINEDECODER_ASYNCBUFFER_INIT_DATA);
    TARGETSPEED_init( &so_targetspeedToLidar, TARGETSPEED_INIT_DATA);
    NMT_init( &so_in_NMT, NMT_INIT_DATA);
}

void SL_SAFETY_STATE_init()
{
    CARSTATE_init( &so_carstate, CARSTATE_INIT_DATA);
    REMOTEMSG_init( &so_out_remoteMsgFromState, REMOTEMSG_INIT_DATA);
}

void SL_CONTROL_init()
{
    LIDARSCAN_init( &so_in_lidarscan, LIDARSCAN_INIT_DATA);
    LIDARFEATURE_init( &so_lidarfeature, LIDARFEATURE_INIT_DATA);
    TARGETSPEED_init( &so_targetspeed, TARGETSPEED_INIT_DATA);
    CARPOSITION_init( &so_carposition, CARPOSITION_INIT_DATA);
    REMOTEMSG_init( &so_out_remoteMsgFromControl, REMOTEMSG_INIT_DATA);
}

void SL_MISC_init()
{
    TOUCH_init( &so_in_touch, TOUCH_INIT_DATA);
    EVENT_init( &so_touchEvent, EVENT_INIT_DATA);
}



/*******************************************************************************
 ** Timertick functions for the signallayers
 *******************************************************************************/ 

#define SL_SAFETY_TICKTIME 10

void SL_SAFETY_timertick()
{
    CARDATAPROTOCOL_inc_age( &so_in_remote, SL_SAFETY_TICKTIME);
    CARDATAPROTOCOL_inc_age( &so_out_remote, SL_SAFETY_TICKTIME);
    EVENT_inc_age( &so_out_remoteEvent, SL_SAFETY_TICKTIME);
    SINT32_IR_inc_age( &so_remoteId, SL_SAFETY_TICKTIME);
    ENGINE_inc_age( &so_out_engine, SL_SAFETY_TICKTIME);
    ENGINESTATE_inc_age( &so_in_engineState, SL_SAFETY_TICKTIME);
    ENGINESTATE_inc_age( &so_out_engineState, SL_SAFETY_TICKTIME);
    SINT32_IR_inc_age( &so_driveMode, SL_SAFETY_TICKTIME);
    UINT8_inc_age( &so_in_lidarCollision, SL_SAFETY_TICKTIME);
    LIDARCONFIG_inc_age( &so_inout_lidarConfig, SL_SAFETY_TICKTIME);
    JOYSTICK_inc_age( &so_joystick, SL_SAFETY_TICKTIME);
    ENGINEDECODER_inc_age( &so_in_enginedecoder, SL_SAFETY_TICKTIME);
    ENGINEDECODER_ASYNCBUFFER_inc_age( &so_in_enginedecoderBuffer, SL_SAFETY_TICKTIME);
    TARGETSPEED_inc_age( &so_targetspeedToLidar, SL_SAFETY_TICKTIME);
    NMT_inc_age( &so_in_NMT, SL_SAFETY_TICKTIME);
}

#define SL_SAFETY_STATE_TICKTIME 10

void SL_SAFETY_STATE_timertick()
{
    CARSTATE_inc_age( &so_carstate, SL_SAFETY_STATE_TICKTIME);
    REMOTEMSG_inc_age( &so_out_remoteMsgFromState, SL_SAFETY_STATE_TICKTIME);
}

#define SL_CONTROL_TICKTIME 10

void SL_CONTROL_timertick()
{
    LIDARSCAN_inc_age( &so_in_lidarscan, SL_CONTROL_TICKTIME);
    LIDARFEATURE_inc_age( &so_lidarfeature, SL_CONTROL_TICKTIME);
    TARGETSPEED_inc_age( &so_targetspeed, SL_CONTROL_TICKTIME);
    CARPOSITION_inc_age( &so_carposition, SL_CONTROL_TICKTIME);
    REMOTEMSG_inc_age( &so_out_remoteMsgFromControl, SL_CONTROL_TICKTIME);
}

#define SL_MISC_TICKTIME 10

void SL_MISC_timertick()
{
    TOUCH_inc_age( &so_in_touch, SL_MISC_TICKTIME);
    EVENT_inc_age( &so_touchEvent, SL_MISC_TICKTIME);
}

