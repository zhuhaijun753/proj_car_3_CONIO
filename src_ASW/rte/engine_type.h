/*
 * ENGINE_type.h
 *
 *  Created on: 01.05.2016
 *      Author: Autogenerated by H-DA RTE Generator, Fromm
 */



#ifndef ENGINE_TYPE_H_
#define ENGINE_TYPE_H_

#include "global.h"

/*****************************************************************************************
 *************** Type Definition for ENGINE  signal class **************************
 *****************************************************************************************/

/**
 * RPM_MAX / TARGETMAX
 * 120 rpm / 100%
 */
#define ENGINE_PERCENT2RPM 		1.2


typedef struct
{
	//Shaft turns
	sint32_t wheelspeedFL;
	sint32_t wheelspeedFR;
	sint32_t wheelspeedRL;
	sint32_t wheelspeedRR;
}CODD_ENGINE_t;

typedef CODD_ENGINE_t* ENGINE_raw_t;

typedef struct
{
	float32_t speed_frontRight; //[rpm] Todo:check unit and sint16
	float32_t speed_frontLeft;  //[rpm]
	float32_t speed_rearRight;  //[rpm]
	float32_t speed_rearLeft;   //[rpm]

} ENGINE_data_t;


#define ENGINE_INIT_DATA ((ENGINE_data_t){0,0,0,0})
#define ENGINE_INIT_RAW  ((ENGINE_raw_t)&CODD_ENGINE_data)
#define ENGINE_INIT_CODD ((CODD_ENGINE_t){0,0,0,0})

/*****************************************************************************************
 *************** Type specific scaler functions ******************************************
 *****************************************************************************************/
#ifdef  __cplusplus
extern "C"
{
#endif

/**
 * Scaler to translate bytestream protocol into ENGINE application data type
 * @param const ENGINE_raw_t * const praw  ==> INPUT: Pointer to the signal raw data object
 * @param const ENGINE_data_t * const pvalue ==> OUTPUT: Pointer to the signal application data object
 */
RC_t ENGINE_scaleR2D( const ENGINE_raw_t * const praw, ENGINE_data_t * const pvalue);

/**
 * Scaler to translate engine control speed into CanOpen protocol
 * @param const ENGINE_data_t * const pvalue ==> INPUT: Pointer to the signal application data object
 * @param ENGINE_raw_t * const praw  ==> Output: Pointer to the signal rawdata object
  */
RC_t ENGINE_scaleD2R( const ENGINE_data_t * const pvalue, ENGINE_raw_t * const praw);

#ifdef  __cplusplus
}
#endif

#endif /* SWC_ENGINE_TYPE_H_ */

