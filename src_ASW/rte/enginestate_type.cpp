/*
 * ENGINESTATE_type.cpp
 *
 *  Created on: 01.05.2016
 *      Author: Autogenerated
 */



#include "ENGINESTATE_type.h"

extern "C"
{

extern CODD_ENGINESTATE_t CODD_ENGINESTATE_data;


static uint16_t ENGINESTATE__DriveState2CanOpen(ENGINESTATE_DriveState_t st)
{
	switch(st)
	{
	case DriveState_SwitchOnDisabled:
		return 0x0000;
	case DriveState_ReadyToSwitchOn:
		return 0x0006;
	case DriveState_SwitchedOn:
		return 0x0007;
	case DriveState_OperationEnable:
		return 0x000F;
	case DriveState_QuickStop:
		return 0x0002;
	default:
		return 0;
	}
}



static ENGINESTATE_DriveState_t ENGINESTATE__CanOpen2DriveState(uint16_t data)
{
	if((data & 0x00CF) == 0x00)
	{
		return DriveState_NotReadyToSwitchON;
	}

	if((data & 0x00CF) == 0x40)
	{
		return DriveState_SwitchOnDisabled;
	}

	if((data & 0x00EF) == 0x21)
	{
		return DriveState_ReadyToSwitchOn;
	}

	if((data & 0x00EF) == 0x23)
	{
		return DriveState_SwitchedOn;
	}

	if((data & 0x00EF) == 0x27)
	{
		return DriveState_OperationEnable;
	}

	if((data & 0x00EF) == 0x07)
	{
		return DriveState_QuickStop;
	}

	return DriveState_Unknown;
}

RC_t ENGINESTATE_scaleR2D( const ENGINESTATE_raw_t * const praw, ENGINESTATE_data_t * const pvalue)
{
//#error "Enter your code here"
	(pvalue->engineFL_appState).applicationDriveState = ENGINESTATE__CanOpen2DriveState(((*praw)->enfineFL_rawState).rawDriveState);
	/*
	 * currently NMT get status disabled read from ISR only
	 */
	(pvalue->engineFL_appState).applicationNmtState = (((*praw)->enfineFL_rawState).rawNmtState);
	//later implement for heartbeat error count also

	(pvalue->engineFR_appState).applicationDriveState = ENGINESTATE__CanOpen2DriveState(((*praw)->enfineFR_rawState).rawDriveState);
	/*
	 * currently NMT get status disabled read from ISR only
	 */
	(pvalue->engineFR_appState).applicationNmtState = (((*praw)->enfineFR_rawState).rawNmtState);
	//later implement for heartbeat error count also

	(pvalue->engineRR_appState).applicationDriveState = ENGINESTATE__CanOpen2DriveState(((*praw)->enfineRR_rawState).rawDriveState);
	/*
	 * currently NMT get status disabled read from ISR only
	 */
	(pvalue->engineRR_appState).applicationNmtState = (((*praw)->enfineRR_rawState).rawNmtState);
	//later implement for heartbeat error count also

	(pvalue->engineRL_appState).applicationDriveState = ENGINESTATE__CanOpen2DriveState(((*praw)->enfineRL_rawState).rawDriveState);
	/*
	 * currently NMT get status disabled read from ISR only
	 */
	(pvalue->engineRL_appState).applicationNmtState = (((*praw)->enfineRL_rawState).rawNmtState);
	//later implement for heartbeat error count also

	return RC_SUCCESS;
}

RC_t ENGINESTATE_scaleD2R( const ENGINESTATE_data_t * const pvalue, ENGINESTATE_raw_t * const praw)
{

	(CODD_ENGINESTATE_data.enfineFL_rawState).command = pvalue->engineFL_appState.command;
	(CODD_ENGINESTATE_data.enfineFL_rawState).rawDriveState = ENGINESTATE__DriveState2CanOpen((pvalue->engineFL_appState).applicationDriveState);
	(CODD_ENGINESTATE_data.enfineFL_rawState).rawNmtState = ((pvalue->engineFL_appState).applicationNmtState);
	//check heartbeat error count later

	(CODD_ENGINESTATE_data.enfineFR_rawState).command = pvalue->engineFR_appState.command;
	(CODD_ENGINESTATE_data.enfineFR_rawState).rawDriveState = ENGINESTATE__DriveState2CanOpen((pvalue->engineFR_appState).applicationDriveState);
	(CODD_ENGINESTATE_data.enfineFR_rawState).rawNmtState = ((pvalue->engineFR_appState).applicationNmtState);
	//check heartbeat error count later

	(CODD_ENGINESTATE_data.enfineRR_rawState).command = pvalue->engineRR_appState.command;
	(CODD_ENGINESTATE_data.enfineRR_rawState).rawDriveState = ENGINESTATE__DriveState2CanOpen((pvalue->engineRR_appState).applicationDriveState);
	(CODD_ENGINESTATE_data.enfineRR_rawState).rawNmtState = ((pvalue->engineRR_appState).applicationNmtState);
	//check heartbeat error count later

	(CODD_ENGINESTATE_data.enfineRL_rawState).command = pvalue->engineRL_appState.command;
	(CODD_ENGINESTATE_data.enfineRL_rawState).rawDriveState = ENGINESTATE__DriveState2CanOpen((pvalue->engineRL_appState).applicationDriveState);
	(CODD_ENGINESTATE_data.enfineRL_rawState).rawNmtState = ((pvalue->engineRL_appState).applicationNmtState);
	//check heartbeat error count later

	*praw = &CODD_ENGINESTATE_data;

	return RC_SUCCESS;
}

} //extern  "C"
