/**************************************************
 ** The signal blackboard (autogenerated)
 **************************************************/

#ifndef SIGNAL_BB_H
#define SIGNAL_BB_H

#include "mcal.h" 
#include "com.h" 

/* Generated signal classes */
#include "cardataprotocol_signal.h"
#include "remotemsg_signal.h"
#include "joystick_signal.h"
#include "carstate_signal.h"
#include "targetspeed_signal.h"
#include "nmt_signal.h"
#include "engine_signal.h"
#include "enginestate_signal.h"
#include "lidarscan_signal.h"
#include "lidarconfig_signal.h"
#include "lidarfeature_signal.h"
#include "enginedecoder_signal.h"
#include "enginedecoder_asyncbuffer_signal.h"
#include "carposition_signal.h"
#include "sint32_ir_signal.h"
#include "uint8_signal.h"
#include "event_signal.h"
#include "touch_signal.h"


/* Generated objects */



/*******************************************************************************
 ** Signallayer sl_safety: Contains all safety critical signals. Runs on core 0 
 ******************************************************************************/ 

/* Protocol package received from the remote control */
extern CARDATAPROTOCOL_t so_in_remote;

/* Protocol package received from the message driver and send to the remote control */
extern CARDATAPROTOCOL_t so_out_remote;

/* Signal firing events based on the received protocols to the receiver task (State) */
extern EVENT_t so_out_remoteEvent;

/* Identifier (protocol) of the remote control id */
extern SINT32_IR_t so_remoteId;

/* Target value for the engine controller */
extern ENGINE_t so_out_engine;

/* Current state of the engine controller */
extern ENGINESTATE_t so_in_engineState;

/* Target state for the engine controller */
extern ENGINESTATE_t so_out_engineState;

/* Identifier for the selected drive mode */
extern SINT32_IR_t so_driveMode;

/* Lidar collision signal. 0x00 - no collision, 0x01 - warning, close obstacle, 0x02 - error, obstacle too close, stop */
extern UINT8_t so_in_lidarCollision;

/* Lidar configuration */
extern LIDARCONFIG_t so_inout_lidarConfig;

/* User target speed and other control commands */
extern JOYSTICK_t so_joystick;

/* Decoder values provided from engine decoder */
extern ENGINEDECODER_t so_in_enginedecoder;

/* Buffer for decoder values provided from engine decoder */
extern ENGINEDECODER_ASYNCBUFFER_t so_in_enginedecoderBuffer;

/* Targetspeed for the Lidar sensor */
extern TARGETSPEED_t so_targetspeedToLidar;

/* Current NMT state of all devices, requested from the SmartPower Board */
extern NMT_t so_in_NMT;



/*******************************************************************************
 ** Signallayer sl_safety_state: Contains all signals which are modified by the central state handler 
 ******************************************************************************/ 

/* Central car state */
extern CARSTATE_t so_carstate;

/* Protocol package send to the remote control via message handler */
extern REMOTEMSG_t so_out_remoteMsgFromState;



/*******************************************************************************
 ** Signallayer sl_control: Contains all signals required for controlling the car 
 ******************************************************************************/ 

/* Raw data provided from the LIDAR sensor */
extern LIDARSCAN_t so_in_lidarscan;

/* Interrunnable variable containing LIDAR feature data */
extern LIDARFEATURE_t so_lidarfeature;

/* Targetspeed for the car */
extern TARGETSPEED_t so_targetspeed;

/* Car position based on dead reckoning data */
extern CARPOSITION_t so_carposition;

/* Protocol package send to the remote control via message handler */
extern REMOTEMSG_t so_out_remoteMsgFromControl;



/*******************************************************************************
 ** Signallayer sl_misc: Contains all miscellaneous signals 
 ******************************************************************************/ 

/* Touch Signal */
extern TOUCH_t so_in_touch;

/* Signal firing events based on touch activity to the receiver task (TFT) */
extern EVENT_t so_touchEvent;



/*******************************************************************************
 ** Init functions for the signallayers
 *******************************************************************************/ 

/** Contains all safety critical signals. Runs on core 0 */
extern void SL_SAFETY_init();

/** Contains all signals which are modified by the central state handler */
extern void SL_SAFETY_STATE_init();

/** Contains all signals required for controlling the car */
extern void SL_CONTROL_init();

/** Contains all miscellaneous signals */
extern void SL_MISC_init();



/*******************************************************************************
 ** Timertick functions for the signallayers
 *******************************************************************************/ 

/** Contains all safety critical signals. Runs on core 0 */
extern void SL_SAFETY_timertick();

/** Contains all signals which are modified by the central state handler */
extern void SL_SAFETY_STATE_timertick();

/** Contains all signals required for controlling the car */
extern void SL_CONTROL_timertick();

/** Contains all miscellaneous signals */
extern void SL_MISC_timertick();



#endif
